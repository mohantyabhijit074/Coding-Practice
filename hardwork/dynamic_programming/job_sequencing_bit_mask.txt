#include<iostream>
using namespace std;
#include<bits/stdc++.h>
#define mod 1000000007
#define ll long long

int cost[21][21];
int dp[21][(1<<21)];

int jobsequence(int i,int mask,int& n)
{
    if(i==n)
    {
        return 0;
    }
    if(dp[i][mask]!=-1)
    {
        return dp[i][mask];
    }
    int ans = INT_MAX;
    for(int j = 0;j<n;j++)
    {
        if(mask&(1<<j))
        {
            ans = min(ans,cost[j][i]+jobsequence(i+1,(mask^(1<<j)),n));
        }
    }
    return dp[i][mask] = ans;
}
void solve()
{
    int n;
    cin >> n;
    memset(dp,-1,sizeof(dp));
    for(int i = 0;i<n;i++)
    {
        for(int j= 0;j<n;j++)
        {
            cin >> cost[i][j];
        }
    }
    cout << jobsequence(0,(1<<n)-1,n) <<"\n";
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t;
    //cin >> t;
    t = 1;
    while(t--)
    {
        solve();
    }
    return 0;
}