#include<iostream>
using namespace std;
#include<bits/stdc++.h>
#define mod 1000000007
#define ll long long

int dp[203][203][203];

int find_lcs(string &s1,string &s2,string &s3,int i,int j,int k)
{
    if(i==0 || j==0 || k==0)
    {
        return 0;
    }
    if(dp[i][j][k]!=-1)
    {
        return dp[i][j][k];
    }
    if(s1[i-1]==s2[j-1] && s2[j-1]==s3[k-1])
    {
        return dp[i][j][k] = 1+find_lcs(s1,s2,s3,i-1,j-1,k-1);
    }
    else 
    {
        int l = find_lcs(s1,s2,s3,i-1,j,k);
        int r = find_lcs(s1,s2,s3,i,j-1,k);
        int m = find_lcs(s1,s2,s3,i,j,k-1);
        return dp[i][j][k] = max({l,r,m});
    }
}
void solve()
{
    memset(dp,-1,sizeof(dp));
    string a,b,c;
    cin >> a >> b >> c;
    int n1,n2,n3;
    n1 = a.length();
    n2 = b.length();
    n3 = c.length();
    cout << find_lcs(a,b,c,n1,n2,n3) <<"\n";
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t;
    //cin >> t;
    t = 1;
    while(t--)
    {
        solve();
    }
    return 0;
}