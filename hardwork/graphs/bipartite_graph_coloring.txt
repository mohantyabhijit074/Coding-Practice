#include<iostream>
using namespace std;
#include<bits/stdc++.h>
#define mod 1000000007
#define ll long long

ll n,m;
vector<vector<ll>> g;
vector<ll> color;
vector<bool> vis;
bool dfs(ll u,ll c,ll par)
{
    vis[u] = true;
    color[u] = c;
    for(auto v : g[u])
    {
        if(v==par) continue;
        if(color[v]==0)
        {
            if(!dfs(v,color[u]^3,u))
                return false;
        }
        if(color[v]==color[u])
            return false;
    }
    return true;
}

bool color_all()
{
    for(int i = 1;i<=n;i++)
    {
        if(!vis[i])
        {
            if(!dfs(i,1,-1))
                return false;
        }
    }
    return true;
}

void solve()
{
    cin >> n >> m;
    g.resize(n+1);
    color.resize(n+1);
    vis.resize(n+1);
    for(int i = 0;i<m;i++)  
    {
        int u,v;
        cin >> u >>v;
        g[u].emplace_back(v);
        g[v].emplace_back(u);
    }
    bool ans = color_all();
    if(!ans)
    {
        cout << "IMPOSSIBLE\n";
        return;
    }
    else
    {
        for(int i = 1;i<=n;++i)
        {
            cout << color[i] <<" ";
        }
        cout <<"\n";return;
    }

}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t;
    //cin >> t;
    t = 1;
    while(t--)
    {
        solve();
    }
    return 0;
}