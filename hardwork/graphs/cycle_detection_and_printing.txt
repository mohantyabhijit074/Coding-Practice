#include<iostream>
using namespace std;
#include<bits/stdc++.h>
#define mod 1000000007
#define ll long long

ll n,m;
ll sv,ev;
vector<vector<ll>> g;
vector<ll> vis;
vector<ll> parent;

bool dfs(ll u,ll par)
{
    parent[u] = par;
    vis[u] = 1;
    for(auto it: g[u])
    {
        if(it==par)
            continue;
        if(vis[it])
        {
            sv = it;
            ev = u;
            return true;
        }
        if(!vis[it])
        {
            if(dfs(it,u))
                return true;
        }

    }
    return false;

}

bool visit_all()
{
    for(int i = 1;i<=n;i++)
    {
        if(!vis[i])
            if(dfs(i,-1))
                return true;
    }
    return false;
}

void solve()
{
    cin >> n >> m;
    g.resize(n+1);
    vis.resize(n+1);
    parent.resize(n+1);
    for(int i = 0;i<m;i++)
    {
        ll u,v;
        cin >> u >> v;
        g[u].emplace_back(v);
        g[v].emplace_back(u);
    }
    if(!visit_all())
    {
        cout <<"IMPOSSIBLE\n";
        return;
    }
    ll tv = ev;
    vector<ll> ans;
    ans.emplace_back(ev);
    while(tv!=sv)
    {
        ans.emplace_back(parent[tv]);
        tv = parent[tv];
    }
    ans.emplace_back(ev);
    cout << ans.size() <<"\n";
    for(auto c:ans)
    {
        cout << c <<" ";
    }
    cout <<"\n";
    return;

}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t;
    //cin >> t;
    t = 1;
    while(t--)
    {
        solve();
    }
    return 0;
}