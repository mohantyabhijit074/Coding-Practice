#include<iostream>
using namespace std;
#include<bits/stdc++.h>
#define mod 1000000007
#define ll long long

ll getparent(vector<int>& parent,int a)
{
    return parent[a]=(parent[a]==a?a:getparent(parent,parent[a]));
}

void Union(vector<int>& parent,vector<int>&rank,ll a,ll b)
{
    a = getparent(parent,a);
    b = getparent(parent,b);
    if(rank[a]==rank[b])
    {
        rank[a]++;
    }
    if(rank[a]>rank[b])
    {
        parent[b] = a;
    }
    else
    {
        parent[a] = b;
    }
}
void solve()
{
    ll n,m;
    vector<int> parent(n+1);
    vector<int> rank(n+1,0);
    for(int i = 0;i<=n;i++)
    {
        parent[i] = i;
    }
    while(m--)
    {
        int t;
        cin >> t;
        if(t==1)
        {
            int x,y;
            cin >> x >> y;
            Union(parent,rank,x,y);
        }
        else 
        {
            int x;
            cin >> x;
            cout << getparent(x) <<"\n";
        }
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t;
    //cin >> t;
    t = 1;
    while(t--)
    {
        solve();
    }
    return 0;
}