#include<iostream>
using namespace std;
#include<bits/stdc++.h>
#define mod 1000000007
#define ll long long

vector<int> graph[100005];
int dp[100005];
int find_longest_path(int src)
{
	if(dp[src]!=-1) return dp[src];
	int result = INT_MIN;
	bool no_neighbour  = true;
	for(int neighbour : graph[src])
	{
		no_neighbour = false;
		result = max(result,find_longest_path(neighbour));

	}
	return no_neighbour ? dp[src] = 0 : dp[src] = result+1;
}
void solve()
{
	memset(dp,-1,sizeof(dp));
	int n,m;
	cin >> n >> m;
	while(m--)
	{
		int u,v;
		cin >> u >> v;
		graph[u].push_back(v);
	}
	int result = INT_MIN;
	for(int i=1;i<=n;i++)
	{
		result = max(result,find_longest_path(i));
	}
	cout << result <<"\n";
	return;
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	ll t;
	//cin >> t;
	t = 1;
	while(t--)
	{
		solve();
	}
	return 0;
}