#include<iostream>
using namespace std;
#include<bits/stdc++.h>
#define mod 1000000007
#define ll long long

int n,e;
vector<vector<pair<int,int>>> g;
vector<int> dist;
const int inf = 1e8;

void dikstra(int k)
{
    for(int i = 0;i<=n;++i)
    {
        dist[i] = inf;
    }
    dist[k] = 0;
    priority_queue<pair<int,int>, vector<pair<int,int>>,greater<pair<int,int>>> pq;
    pq.push({0,k});
    while(!pq.empty())
    {
        int u = pq.top().second;
        int d = pq.top().first;
        pq.pop();
        if(dist[u]<d)
            continue;
        for(auto e:g[u])
        {
            int v = e.first;
            int c = e.second;
            if(dist[v]<=c+d)
                continue;
            else 
            {
                dist[v] = c+d;
                pq.push({dist[v],v});
            }
        }
    }
}
void solve()
{
    int k;
    cin >> n >> k;
    g.resize(n+1);
    dist.resize(n+1);
    cin >> e;
    for(int i = 0;i<e;++i)
    {
        int u,v,c;
        cin >> u >> v >> c;
        g[u].push_back({v,c});
    }
    dikstra(k);
    int ans = 0;
    for(int i = 1;i<=n;++i)
    {
        ans = max(ans,dist[i]);
    }
    ans = (ans==inf)?-1:ans;
    cout << ans <<"\n";

}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t;
    //cin >> t;
    t = 1;
    while(t--)
    {
        solve();
    }
    return 0;
}